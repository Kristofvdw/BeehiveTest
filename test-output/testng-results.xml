<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="FTT 1.02 Test Login" duration-ms="6888" started-at="2017-01-24T13:50:10Z" finished-at="2017-01-24T13:50:17Z">
    <groups>
    </groups>
    <test name="Test login" duration-ms="6888" started-at="2017-01-24T13:50:10Z" finished-at="2017-01-24T13:50:17Z">
      <class name="POMTest.TestSuite">
        <test-method status="PASS" signature="setupTest()[pri:0, instance:POMTest.TestSuite@56cbfb61]" name="setupTest" is-config="true" duration-ms="3034" started-at="2017-01-24T14:50:10Z" finished-at="2017-01-24T14:50:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setupClass()[pri:0, instance:POMTest.TestSuite@56cbfb61]" name="setupClass" is-config="true" duration-ms="1" started-at="2017-01-24T14:50:13Z" finished-at="2017-01-24T14:50:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method status="FAIL" signature="testIfCanLogin(java.lang.String, java.lang.String)[pri:0, instance:POMTest.TestSuite@56cbfb61]" name="testIfCanLogin" duration-ms="2284" started-at="2017-01-24T14:50:13Z" finished-at="2017-01-24T14:50:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[random]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[y$lo]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at POMTest.TestSuite.testIfCanLogin(TestSuite.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfCanLogin -->
        <test-method status="PASS" signature="shouldGiveErrorOnIncorrectPassword(java.lang.String, java.lang.String)[pri:0, instance:POMTest.TestSuite@56cbfb61]" name="shouldGiveErrorOnIncorrectPassword" duration-ms="483" started-at="2017-01-24T14:50:16Z" finished-at="2017-01-24T14:50:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[badPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGiveErrorOnIncorrectPassword -->
        <test-method status="PASS" signature="shouldGiveErrorOnNotExistingUsername()[pri:0, instance:POMTest.TestSuite@56cbfb61]" name="shouldGiveErrorOnNotExistingUsername" duration-ms="0" started-at="2017-01-24T14:50:16Z" finished-at="2017-01-24T14:50:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGiveErrorOnNotExistingUsername -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:POMTest.TestSuite@56cbfb61]" name="teardown" is-config="true" duration-ms="1060" started-at="2017-01-24T14:50:16Z" finished-at="2017-01-24T14:50:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- POMTest.TestSuite -->
    </test> <!-- Test login -->
  </suite> <!-- FTT 1.02 Test Login -->
</testng-results>
